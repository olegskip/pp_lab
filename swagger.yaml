openapi: 3.0.3
info:
  title: Family budget API
  version: 1.0.0
tags:
  - name: family_budget
    description: Everything about family budgets
  - name: personal_budget
    description: Everything about personal budgets
  - name: user
    description: Everything about users
paths:
  /family_budget:
    post:
      tags:
        - family_budget
      summary: Create a new family budget
      operationId: createFamilyBudget
      security:
        - basicAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                members_ids:
                  type: array
                  items:
                    type: integer
                    example: 1
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FamilyBudget'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

  /family_budget/{family_budget_id}:
    parameters:
      - name: family_budget_id
        in: path
        description: The budget's id
        required: true
        schema:
          type: integer
    get:
      tags:
        - family_budget
      summary: Get an existing family bugdet
      operationId: getFamilyBudget
      security:
        - basicAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  members:
                    type: array
                    items:
                      type: integer
                      example: 1
                  money_amount:
                    type: number
                  id:
                    type: number
        '404':
          description: Budget not found
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    patch:
      tags:
        - family_budget
      summary: Update an existing family budget, could be realised later
      operationId: updateFamilyBudget
      security:
        - basicAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/FamilyBudget'
      responses:
        '200':
          description: OK
        '404':
          description: Budget not found
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    delete:
      tags:
        - family_budget
      summary: Delete an existing family budget
      operationId: deleteFamilyBudget
      security:
        - basicAuth: []
      responses:
        '200':
          description: OK
        '404':
          description: Budget not found
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '405':
          description: Database error


  /family_budget/{family_budget_id}/report:
    parameters:
      - name: family_budget_id
        in: path
        description: The family budget's id
        required: true
        schema:
          type: integer
    get:
      tags:
        - family_budget
      summary: Get family budget report
      operationId: getFamilyBudgetReport
      security:
        - basicAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetReport'
        '404':
          description: Budget not found
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '405':
          description: This budget has no operations

  /family_budget/{family_budget_id}/transfer:
    parameters:
      - name: family_budget_id
        in: path
        description: The family budget's id
        required: true
        schema:
          type: integer
    post:
      tags:
        - family_budget
      summary: Tranfser money from the family bugdet to some budget
      operationId: transferFromFamilyBudget
      requestBody:
        required: true
        content:
          application/json:
              schema:
                type: object
                properties:
                  receiver_budget_id:
                    type: integer
                    example: 1
                  receiver_type:
                    type: string
                    example: "personal"
                  money_amount:
                    type: integer
                    minimum: 1
                    example: 223
      security:
        - basicAuth: []
      responses:
        '200':
            description: OK
        '404':
          description: Budget not found
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '405':
          description: Failed to execute operation, database error
        '406':
          description: Not enough money
        '407':
          description: Money amount couldn`t be less than 0.1
        '408':
          description: Receiving budget doesn`t exist

  /personalBudget/{budget_id}:
    parameters:
      - name: budget_id
        in: path
        description: The budget's id
        required: true
        schema:
          type: integer
    get:
      tags: # get budget
        - personal_budget
      summary: Get an existing personal bugdet
      operationId: getPersonalBudget
      security:
        - basicAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                  money_amount:
                    type: number
        '404':
          description: Budget not found
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

  /personal_budget/{budget_id}/report:
    parameters:
      - name: budget_id
        in: path
        description: The user's budget id
        required: true
        schema:
          type: integer
    get:
      tags:
        - personal_budget
      summary: Get personal report
      operationId: getPersonalBudgetReport
      security:
        - basicAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetReport'
        '404':
          description: User not found
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '405':
          description: This budget has no operations

  /personal_budget/{budget_id}/transfer:
    parameters:
      - name: budget_id
        in: path
        description: The budget's id
        required: true
        schema:
          type: integer
    post:
      tags:
        - personal_budget
      summary: Tranfser money from the personal bugdet to some budget
      operationId: transferFromUser
      requestBody:
        required: true
        content:
          application/json:
              schema:
                type: object
                properties:
                  receiver:
                    $ref: '#/components/schemas/Budget'
                  moneyAmount:
                    type: integer
                    minimum: 1
                    example: 223
      security:
        - basicAuth: []
      responses:
        '200':
            description: OK
        '404':
          description: Budget not found
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '400':
          description: Bad request

  /user:
    post:
      tags:
        - user
      summary: Create a new user
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                surname:
                  type: string
                  example: dungeon
                name:
                  type: string
                  example: master
                username:
                  type: string
                  example: dungeonmaster
                password:
                  type: string
                  example: van

      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad request
        '401':
          description: User already exists
        '405':
          description: Failed to create personal budget, database error

  /user/{user_id}:
    parameters:
      - name: user_id
        in: path
        description: The user's id
        required: true
        schema:
          type: integer

    get:
      tags:
        - user
      summary: Get an user
      operationId: getUser
      security:
        - basicAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Budget not found
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    patch:
      tags:
        - user
      summary: Update an existing user
      operationId: updateUser
      security:
        - basicAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                surname:
                  type: string
                  example: "Master"
                name:
                  type: string
                  example: "Dungeon"
                username:
                  type: string
                  example: "Dungeon"
                passwrd:
                  type: string
                  example: "Dungeon"
      responses:
        '200':
          description: OK
        '404':
          description: User not found
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    delete:
      tags:
        - user
      summary: Delete an user and his personal budget
      operationId: deleteUser
      security:
        - basicAuth: []
      responses:
        '200':
          description: OK
        '404':
          description: Budget not found
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

  /user/login:
    get:
      tags:
        - user
      summary: Logs user into the system
      description: ''
      operationId: loginUser
      parameters:
        - name: username
          in: query
          description: The user name for login
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: true
          schema:
            type: string
      responses:
        '204':
          description: successful operation
        '400':
          description: Invalid username/password supplied


components:
  schemas:
    FamilyBudget:
      type: object
      required:
        - money_amount
        - member_ids
      properties:
        id:
          type: integer
          example: 1
          minimum: 1
        total_money_amount:
          type: integer
          example: 0
        members:
          type: number

    PersonalBudget:
      type: object
      required:
        - money_amount
        - owner
      properties:
        id:
          type: integer
          example: 1
          minimum: 1
        money_amount:
          type: integer
          example: 0
        owner_id:
          type: number

    BudgetReport:
      type: object
      required:
        - operations
      properties:
        operations:
          type: array
          items:
            $ref: '#/components/schemas/MoneyOperation'

    Budget:
      type: object
      required:
        - Budget
      properties:
        budget_type:
          enum: [personal, family]
        budget_id:
          type: integer
          example: 1

    MoneyOperation:
      type: object
      properties:
        sender:
          $ref: '#/components/schemas/Budget'
        receiver:
          $ref: '#/components/schemas/Budget'
        date:
          type: string # date-time
          example: "1/09/2022 19:36:30"
        money_amount:
          type: integer
          example: 1 # plus if income, minus if outcome

    User:
      type: object
      required:
        - surname
        - name
        - personal_budget
        - family_budgets
      properties:
        id:
          type: integer
          example: 1
        surname:
          type: string
          example: "Dungeon"
        name:
          type: string
          example: "Master"
        family_budgets_ids:
          type: array
          items:
            $ref: "#/components/schemas/FamilyBudget"

  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
