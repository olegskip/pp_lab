openapi: 3.0.3
info:
  title: Family budget API
  version: 1.0.0
tags:
  - name: family_budget
    description: Everything about family budgets
  - name: personal_budget
    description: Everything about personal budgets
  - name: user
    description: Everything about users
paths:
  /family_budget:
    post:
      tags:
        - family_budget
      summary: Create a new family budget
      operationId: createFamilyBudget
      security:
        - auth: 
          - user
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items: 
                $ref: '#/components/schemas/FamilyBudget'
                # FamilyBudget.id is not required, if it presents then 400 response
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FamilyBudget'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

  /family_budget/{familyBudgetId}:
    parameters:
      - name: familyBudgetId
        in: path
        description: The budget's id
        required: true
        schema:
          type: integer
    get:
      tags:
        - family_budget
      summary: Get an existing family bugdet
      operationId: getFamilyBudget
      security:
        - auth: 
          - user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FamilyBudget'
        '404':
          description: Budget not found
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    post:
      tags:
        - family_budget
      summary: Update an existing family budget
      operationId: updateFamilyBudget
      security:
        - auth: 
          - user
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items: 
                $ref: '#/components/schemas/FamilyBudget'
                # FamilyBudget.id is not required, if it presents then 400 response
      responses:
        '200':
          description: OK
        '404':
          description: Budget not found
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    delete:
      tags:
        - family_budget
      summary: Delete an existing family budget
      operationId: deleteFamilyBudget
      security:
        - auth:
          - user
      responses:
        '200':
          description: OK
        '404':
          description: Budget not found
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      
          
  /family_budget/{familyBudgetId}/report:
    parameters:
      - name: familyBudgetId
        in: path
        description: The family budget's id
        required: true
        schema:
          type: integer
    get:
      tags:
        - family_budget
      summary: Get family budget report
      operationId: getFamilyBudgetReport
      security:
        - auth:
          - user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetReport'
        '404':
          description: Budget not found
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          
  /family_budget/{familyBudgetId}/transfer:
    parameters:
      - name: familyBudgetId
        in: path
        description: The family budget's id
        required: true
        schema:
          type: integer
    post:
      tags:
        - family_budget
      summary: Tranfser money from the family bugdet to some budget
      operationId: transferFromFamilyBudget
      requestBody:
        required: true
        content:
          application/json:
              schema:
                type: object
                properties:
                  receiver:
                    $ref: '#/components/schemas/Budget'
                  moneyAmount:
                    type: integer
                    minimum: 1
                    example: 223
      security:
        - auth:
          - user
      responses:
        '200':
            description: OK
        '404':
          description: Budget not found
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  
  /personalBudget/{BudgetId}:
    parameters:
      - name: BudgetId
        in: path
        description: The budget's id
        required: true
        schema:
          type: integer
    get:
      tags: # get budget
        - personal_budget
      summary: Get an existing personal bugdet
      operationId: getPersonalBudget
      security:
        - auth: 
          - user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalBudget'
        '404':
          description: Budget not found
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    post: # update
      tags:
        - personal_budget
      summary: Update a personal budget
      operationId: updatePersonalBudget
      security:
        - auth: 
          - user
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items: 
                $ref: '#/components/schemas/PersonalBudget'
                # If PersonalBudget.id presents and it doesn't equal to BudgetId paramater then 400 response
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
        '404':
          description: Budget not found
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    delete:
      tags:
        - personal_budget
      summary: Delete an existing personal budget
      operationId: deleteBudget
      security:
        - auth: 
          - user
      responses:
        '200':
          description: OK
        '404':
          description: Budget not found
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  
  /personal_budget/{BudgetId}/report:
    parameters:
      - name: BudgetId
        in: path
        description: The user's budget id
        required: true
        schema:
          type: integer
    get:
      tags:
        - personal_budget
      summary: Get personal report
      operationId: getPersonalBudgetReport
      security:
        - auth:
          - user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetReport'
        '404':
          description: User not found
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          
  /personal_budget/{BudgetId}/transfer:
    parameters:
      - name: BudgetId
        in: path
        description: The budget's id
        required: true
        schema:
          type: integer
    post:
      tags:
        - personal_budget
      summary: Tranfser money from the personal bugdet to some budget
      operationId: transferFromUser
      requestBody:
        required: true
        content:
          application/json:
              schema:
                type: object
                properties:
                  receiver:
                    $ref: '#/components/schemas/Budget'
                  moneyAmount:
                    type: integer
                    minimum: 1
                    example: 223
      security:
        - auth:
          - user
      responses:
        '200':
            description: OK
        '404':
          description: Budget not found
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  
  /user:
    post:
      tags:
        - user
      summary: Create a new user
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                surname:
                  type: string
                  example: dungeon
                name:
                  type: string
                  example: master
                string:
                  type: string
                  example: dungeonmaster
                password:
                  type: string
                  example: van
              
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad request

  /user/{UserId}:
    parameters:
      - name: UserId
        in: path
        description: The user's id
        required: true
        schema:
          type: integer
        
    get:
      tags:
        - user
      summary: Get an user
      operationId: getUser
      security:
        - auth: 
          - user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Budget not found
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    post:
      tags:
        - user
      summary: Update an existing user
      operationId: updateUser
      security:
        - auth: 
          - user
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items: 
                $ref: '#/components/schemas/User'
                # If UserId.id presents and it doesn't equal to UserId paramater then 400 response
      responses:
        '200':
          description: OK
        '404':
          description: Budget not found
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    delete:
      tags:
        - user
      summary: Delete an user
      operationId: deleteUser
      security:
        - auth: 
          - user
      responses:
        '200':
          description: OK
        '404':
          description: Budget not found
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          
  /user/login:
    get:
      tags:
        - user
      summary: Logs user into the system
      description: ''
      operationId: loginUser
      parameters:
        - name: username
          in: query
          description: The user name for login
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
            X-Expires-After:
              description: date in UTC when token expires
              schema:
                type: string
                format: date-time
          content:
            application/xml:
              schema:
                type: string
            application/json:
              schema:
                type: string
        '400':
          description: Invalid username/password supplied
          
  /user/logout:
    get:
      tags:
        - user
      summary: Logs out current logged in user session
      description: ''
      operationId: logoutUser
      security:
        - auth:
          - user
      responses:
        '200':
          description: successful operation
        '401':
          description: Unauthorized
        
      
components:
  schemas:
    FamilyBudget:
      type: object
      required:
        - total_money_amount
        - members
      properties:
        id:
          type: integer
          example: 1
          minimum: 1
        total_money_amount:
          type: integer
          example: 0
        members:
          type: array
          items:
            $ref: '#/components/schemas/User'
    
    PersonalBudget:
      type: object
      required:
        - money_amount
        - owner
      properties:
        id:
          type: integer
          example: 1
          minimum: 1
        money_amount:
          type: integer
          example: 0
        owner:
          $ref: '#/components/schemas/User'
      
    BudgetReport:
      type: object
      required:
        - operations
      properties:
        operations:
          type: array
          items:
            $ref: '#/components/schemas/MoneyOperation'
    
    Budget:
      type: object
      required:
        - Budget
      properties:
        budget_type:
          enum: [personal, family]
        budget_id:
          type: integer
          example: 1
    
    MoneyOperation:
      type: object
      required:
        - budget
        - sender
        - receiver
        - time
        - money_amount
      properties:
        budget:
          $ref: '#/components/schemas/Budget'
        sender:
          $ref: '#/components/schemas/User'
        receiver:
          $ref: '#/components/schemas/Budget'
        time:
          type: string # date-time
          example: "1/09/2022 19:36:30"
        money_amount:
          type: integer
          example: 1 # plus if income, minus if outcome
            
    User:
      type: object
      required:
        - surname
        - name
        - personal_budget
        - family_budgets
      properties:
        id:
          type: integer
          example: 1
        surname:
          type: string
          example: "Dungeon"
        name:
          type: string
          example: "Master"
        personal_budget:
          $ref: "#/components/schemas/PersonalBudget"
        family_budgets:
          type: array
          items:
            $ref: "#/components/schemas/FamilyBudget"
          
  securitySchemes:
    auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://petstore3.swagger.io/oauth/authorize
          scopes:
            user: manage budgets